<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PstToolkit</name>
    </assembly>
    <members>
        <member name="T:PstToolkit.Exceptions.PstAccessException">
            <summary>
            Exception thrown when there is an error accessing the PST file.
            </summary>
        </member>
        <member name="M:PstToolkit.Exceptions.PstAccessException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.Exceptions.PstAccessException"/> class.
            </summary>
        </member>
        <member name="M:PstToolkit.Exceptions.PstAccessException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.Exceptions.PstAccessException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:PstToolkit.Exceptions.PstAccessException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.Exceptions.PstAccessException"/> class with a specified error message
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:PstToolkit.Exceptions.PstCorruptedException">
            <summary>
            Exception thrown when the PST file is found to be corrupted.
            </summary>
        </member>
        <member name="M:PstToolkit.Exceptions.PstCorruptedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.Exceptions.PstCorruptedException"/> class.
            </summary>
        </member>
        <member name="M:PstToolkit.Exceptions.PstCorruptedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.Exceptions.PstCorruptedException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:PstToolkit.Exceptions.PstCorruptedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.Exceptions.PstCorruptedException"/> class with a specified error message
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:PstToolkit.Exceptions.PstException">
            <summary>
            Base exception for all PST-related errors.
            </summary>
        </member>
        <member name="M:PstToolkit.Exceptions.PstException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.Exceptions.PstException"/> class.
            </summary>
        </member>
        <member name="M:PstToolkit.Exceptions.PstException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.Exceptions.PstException"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:PstToolkit.Exceptions.PstException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.Exceptions.PstException"/> class with a specified error message
            and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:PstToolkit.Formats.PstFormatType">
            <summary>
            PST file format types.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstFormatType.Ansi">
            <summary>ANSI PST file format (97-2002)</summary>
        </member>
        <member name="F:PstToolkit.Formats.PstFormatType.Unicode">
            <summary>Unicode PST file format (2003+)</summary>
        </member>
        <member name="T:PstToolkit.Formats.PstFormatHeader">
            <summary>
            Represents the header of a PST file that contains format information.
            </summary>
        </member>
        <member name="P:PstToolkit.Formats.PstFormatHeader.Signature">
            <summary>
            Gets the PST file signature.
            </summary>
        </member>
        <member name="P:PstToolkit.Formats.PstFormatHeader.FormatType">
            <summary>
            Gets the PST file format type (ANSI or Unicode).
            </summary>
        </member>
        <member name="P:PstToolkit.Formats.PstFormatHeader.IsAnsi">
            <summary>
            Gets whether the PST file is in ANSI format.
            </summary>
        </member>
        <member name="P:PstToolkit.Formats.PstFormatHeader.MajorVersion">
            <summary>
            Gets the PST file format major version.
            </summary>
        </member>
        <member name="P:PstToolkit.Formats.PstFormatHeader.MinorVersion">
            <summary>
            Gets the PST file format minor version.
            </summary>
        </member>
        <member name="P:PstToolkit.Formats.PstFormatHeader.NodeBTreeRoot">
            <summary>
            Gets the root node ID of the node B-tree.
            </summary>
        </member>
        <member name="P:PstToolkit.Formats.PstFormatHeader.BlockBTreeRoot">
            <summary>
            Gets the root node ID of the block B-tree.
            </summary>
        </member>
        <member name="P:PstToolkit.Formats.PstFormatHeader.RootFolderId">
            <summary>
            Gets the ID of the root folder.
            </summary>
        </member>
        <member name="P:PstToolkit.Formats.PstFormatHeader.IsValid">
            <summary>
            Gets whether the PST header is valid.
            </summary>
        </member>
        <member name="M:PstToolkit.Formats.PstFormatHeader.Read(PstToolkit.Utils.PstBinaryReader)">
            <summary>
            Reads the PST file header from the given reader.
            </summary>
            <param name="reader">The binary reader to read from.</param>
            <returns>A PstFormatHeader object containing the header information.</returns>
        </member>
        <member name="M:PstToolkit.Formats.PstFormatHeader.CreateNew(PstToolkit.Formats.PstFormatType)">
            <summary>
            Creates a new PST file header with the specified format type.
            </summary>
            <param name="formatType">The PST format type to create.</param>
            <returns>A PstFormatHeader object containing the header information.</returns>
        </member>
        <member name="M:PstToolkit.Formats.PstFormatHeader.Write(PstToolkit.Utils.PstBinaryWriter)">
            <summary>
            Writes the PST file header to the given writer.
            </summary>
            <param name="writer">The binary writer to write to.</param>
        </member>
        <member name="T:PstToolkit.Formats.PstNodeTypes">
            <summary>
            Contains constants for PST node types used in the Node Database (NDB) layer.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstNodeTypes.NID_TYPE_INTERNAL">
            <summary>
            Node type for the internal NDB structure.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstNodeTypes.NID_TYPE_FOLDER">
            <summary>
            Node type for a normal folder.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstNodeTypes.NID_TYPE_SEARCH_FOLDER">
            <summary>
            Node type for search folder contents.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstNodeTypes.NID_TYPE_MESSAGE_STORE">
            <summary>
            Node type for the message store.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstNodeTypes.NID_TYPE_MESSAGE">
            <summary>
            Node type for a normal message.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstNodeTypes.NID_TYPE_ATTACHMENT">
            <summary>
            Node type for the attachment object.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstNodeTypes.NID_TYPE_CONTENTS_TABLE">
            <summary>
            Node type for contents table of a folder.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstNodeTypes.NID_TYPE_RECIPIENT_TABLE">
            <summary>
            Node type for the recipient table of a message.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstNodeTypes.NID_TYPE_SEARCH_CRITERIA">
            <summary>
            Node type for the search criteria of a search folder.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstNodeTypes.NID_TYPE_ATTACHMENT_TABLE">
            <summary>
            Node type for the attachment table of a message.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstNodeTypes.NID_TYPE_HIERARCHY_TABLE">
            <summary>
            Node type for hierarchy table of a folder.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstNodeTypes.NID_TYPE_CONTENTS">
            <summary>
            Node type for the message store contents.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstNodeTypes.NID_TYPE_ASSOCIATED_CONTENTS">
            <summary>
            Node type for associated contents table of a folder.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstNodeTypes.NID_TYPE_SEARCH_CONTENTS_TABLE">
            <summary>
            Node type for contents table of a search folder.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstNodeTypes.NID_TYPE_ATTACHMENT_DATA">
            <summary>
            Node type for attachment data.
            </summary>
        </member>
        <member name="F:PstToolkit.Formats.PstNodeTypes.NID_TYPE_ATTACHMENT_OBJECT">
            <summary>
            Node type for embedded message object.
            </summary>
        </member>
        <member name="M:PstToolkit.Formats.PstNodeTypes.GetNodeType(System.UInt32)">
            <summary>
            Extracts the node type from a node ID.
            </summary>
            <param name="nodeId">The node ID.</param>
            <returns>The node type.</returns>
        </member>
        <member name="M:PstToolkit.Formats.PstNodeTypes.IsFolder(System.UInt32)">
            <summary>
            Determines if the given node ID represents a folder.
            </summary>
            <param name="nodeId">The node ID to check.</param>
            <returns>True if the node ID represents a folder, false otherwise.</returns>
        </member>
        <member name="M:PstToolkit.Formats.PstNodeTypes.IsMessage(System.UInt32)">
            <summary>
            Determines if the given node ID represents a message.
            </summary>
            <param name="nodeId">The node ID to check.</param>
            <returns>True if the node ID represents a message, false otherwise.</returns>
        </member>
        <member name="M:PstToolkit.Formats.PstNodeTypes.IsAttachment(System.UInt32)">
            <summary>
            Determines if the given node ID represents an attachment.
            </summary>
            <param name="nodeId">The node ID to check.</param>
            <returns>True if the node ID represents an attachment, false otherwise.</returns>
        </member>
        <member name="M:PstToolkit.Formats.PstNodeTypes.CreateNodeId(System.UInt16,System.UInt16)">
            <summary>
            Creates a new node ID with the specified node type and ID.
            </summary>
            <param name="type">The node type.</param>
            <param name="id">The node-specific ID.</param>
            <returns>A new node ID.</returns>
        </member>
        <member name="T:PstToolkit.FilterOperator">
            <summary>
            Filtering options for message properties
            </summary>
        </member>
        <member name="F:PstToolkit.FilterOperator.Contains">
            <summary>
            Contains the specified text (case-insensitive)
            </summary>
        </member>
        <member name="F:PstToolkit.FilterOperator.StartsWith">
            <summary>
            Starts with the specified text (case-insensitive)
            </summary>
        </member>
        <member name="F:PstToolkit.FilterOperator.EndsWith">
            <summary>
            Ends with the specified text (case-insensitive)
            </summary>
        </member>
        <member name="F:PstToolkit.FilterOperator.Equals">
            <summary>
            Equals the specified text (case-insensitive)
            </summary>
        </member>
        <member name="F:PstToolkit.FilterOperator.RegexMatch">
            <summary>
            Matches the specified regular expression pattern
            </summary>
        </member>
        <member name="F:PstToolkit.FilterOperator.GreaterThan">
            <summary>
            Greater than the specified value (for dates and numeric values)
            </summary>
        </member>
        <member name="F:PstToolkit.FilterOperator.LessThan">
            <summary>
            Less than the specified value (for dates and numeric values)
            </summary>
        </member>
        <member name="F:PstToolkit.FilterOperator.Between">
            <summary>
            Between the specified range (for dates and numeric values)
            </summary>
        </member>
        <member name="F:PstToolkit.FilterOperator.HasValue">
            <summary>
            Has any value (not null or empty)
            </summary>
        </member>
        <member name="F:PstToolkit.FilterOperator.InList">
            <summary>
            Is in a list of values
            </summary>
        </member>
        <member name="T:PstToolkit.FilterCondition">
            <summary>
            Represents a filter condition for message properties
            </summary>
        </member>
        <member name="P:PstToolkit.FilterCondition.Property">
            <summary>
            The property to filter by (e.g., "Subject", "SenderEmail", "ReceivedDate")
            </summary>
        </member>
        <member name="P:PstToolkit.FilterCondition.Operator">
            <summary>
            The filter operator to apply
            </summary>
        </member>
        <member name="P:PstToolkit.FilterCondition.Value">
            <summary>
            The value to compare against
            </summary>
        </member>
        <member name="P:PstToolkit.FilterCondition.Value2">
            <summary>
            The second value for range operations (e.g., Between)
            </summary>
        </member>
        <member name="M:PstToolkit.FilterCondition.#ctor(System.String,PstToolkit.FilterOperator,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.FilterCondition"/> class
            </summary>
            <param name="property">The property to filter by</param>
            <param name="operator">The filter operator to apply</param>
            <param name="value">The value to compare against</param>
        </member>
        <member name="M:PstToolkit.FilterCondition.#ctor(System.String,PstToolkit.FilterOperator,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.FilterCondition"/> class with a second value for range operations
            </summary>
            <param name="property">The property to filter by</param>
            <param name="operator">The filter operator to apply</param>
            <param name="value">The first value to compare against</param>
            <param name="value2">The second value for range operations</param>
        </member>
        <member name="T:PstToolkit.FilterGroup">
            <summary>
            Represents a group of filter conditions with a logical operator
            </summary>
        </member>
        <member name="P:PstToolkit.FilterGroup.Conditions">
            <summary>
            The conditions in this group
            </summary>
        </member>
        <member name="P:PstToolkit.FilterGroup.UseAnd">
            <summary>
            Whether to combine conditions with AND (true) or OR (false)
            </summary>
        </member>
        <member name="P:PstToolkit.FilterGroup.NestedGroups">
            <summary>
            Nested filter groups for complex filtering
            </summary>
        </member>
        <member name="P:PstToolkit.FilterGroup.CombineNestedWithAnd">
            <summary>
            Whether to combine nested groups with AND (true) or OR (false)
            </summary>
        </member>
        <member name="M:PstToolkit.FilterGroup.AddCondition(PstToolkit.FilterCondition)">
            <summary>
            Adds a condition to this filter group
            </summary>
            <param name="condition">The condition to add</param>
            <returns>This filter group for chaining</returns>
        </member>
        <member name="M:PstToolkit.FilterGroup.AddNestedGroup(PstToolkit.FilterGroup)">
            <summary>
            Adds a nested filter group to this filter group
            </summary>
            <param name="nestedGroup">The nested group to add</param>
            <returns>This filter group for chaining</returns>
        </member>
        <member name="T:PstToolkit.MessageFilter">
            <summary>
            A flexible filtering system for PST messages based on various criteria
            </summary>
        </member>
        <member name="M:PstToolkit.MessageFilter.#ctor">
            <summary>
            Creates a new instance of the MessageFilter class
            </summary>
        </member>
        <member name="M:PstToolkit.MessageFilter.#ctor(System.String,PstToolkit.FilterOperator,System.Object)">
            <summary>
            Creates a new instance of the MessageFilter class with an initial filter condition
            </summary>
            <param name="property">The property to filter by</param>
            <param name="operator">The filter operator to apply</param>
            <param name="value">The value to compare against</param>
        </member>
        <member name="M:PstToolkit.MessageFilter.CreateGroup(System.Boolean)">
            <summary>
            Creates a new filter group for complex filtering
            </summary>
            <param name="useAnd">Whether to combine conditions with AND (true) or OR (false)</param>
            <returns>A new filter group</returns>
        </member>
        <member name="M:PstToolkit.MessageFilter.AddCondition(System.String,PstToolkit.FilterOperator,System.Object)">
            <summary>
            Adds a filter condition to the root group
            </summary>
            <param name="property">The property to filter by</param>
            <param name="operator">The filter operator to apply</param>
            <param name="value">The value to compare against</param>
            <returns>This message filter for chaining</returns>
        </member>
        <member name="M:PstToolkit.MessageFilter.AddCondition(System.String,PstToolkit.FilterOperator,System.Object,System.Object)">
            <summary>
            Adds a filter condition with a range to the root group
            </summary>
            <param name="property">The property to filter by</param>
            <param name="operator">The filter operator to apply</param>
            <param name="value">The first value to compare against</param>
            <param name="value2">The second value for range operations</param>
            <returns>This message filter for chaining</returns>
        </member>
        <member name="M:PstToolkit.MessageFilter.CombineWithAnd(System.Boolean)">
            <summary>
            Sets whether to combine conditions in the root group with AND (true) or OR (false)
            </summary>
            <param name="useAnd">Whether to use AND (true) or OR (false)</param>
            <returns>This message filter for chaining</returns>
        </member>
        <member name="M:PstToolkit.MessageFilter.Matches(PstToolkit.PstMessage)">
            <summary>
            Checks if a message matches this filter
            </summary>
            <param name="message">The message to check</param>
            <returns>True if the message matches the filter, false otherwise</returns>
        </member>
        <member name="T:PstToolkit.PstFile">
            <summary>
            Represents a PST file that can be read from or written to.
            Includes optimizations for handling large PST files.
            </summary>
        </member>
        <member name="P:PstToolkit.PstFile.RootFolder">
            <summary>
            Gets the root folder of the PST file.
            </summary>
        </member>
        <member name="P:PstToolkit.PstFile.IsAnsi">
            <summary>
            Gets whether the PST file is in ANSI format (as opposed to Unicode).
            </summary>
        </member>
        <member name="P:PstToolkit.PstFile.FormatType">
            <summary>
            Gets the format type of the PST file.
            </summary>
        </member>
        <member name="P:PstToolkit.PstFile.FilePath">
            <summary>
            Gets the file path of the PST file.
            </summary>
        </member>
        <member name="P:PstToolkit.PstFile.IsReadOnly">
            <summary>
            Gets whether the PST file is open in read-only mode.
            </summary>
        </member>
        <member name="M:PstToolkit.PstFile.Open(System.String,System.Boolean)">
            <summary>
            Opens an existing PST file for reading or writing.
            </summary>
            <param name="filePath">Path to the PST file to open.</param>
            <param name="readOnly">True to open in read-only mode, false for read-write.</param>
            <returns>A PstFile object for the opened file.</returns>
            <exception cref="T:PstToolkit.Exceptions.PstException">Thrown when the file cannot be opened or is not a valid PST file.</exception>
        </member>
        <member name="M:PstToolkit.PstFile.Create(System.String,PstToolkit.Formats.PstFormatType)">
            <summary>
            Creates a new PST file.
            </summary>
            <param name="filePath">Path where the new PST file should be created.</param>
            <param name="formatType">The PST format type to create (Unicode is recommended).</param>
            <returns>A PstFile object for the newly created file.</returns>
            <exception cref="T:PstToolkit.Exceptions.PstException">Thrown when the file cannot be created.</exception>
        </member>
        <member name="M:PstToolkit.PstFile.CopyFrom(PstToolkit.PstFile,System.Action{System.Double})">
            <summary>
            Copies all folders and messages from the source PST file to this PST file.
            </summary>
            <param name="sourcePst">Source PST file to copy from.</param>
            <param name="progressCallback">Optional callback to report progress (0.0 to 1.0)</param>
            <exception cref="T:PstToolkit.Exceptions.PstException">Thrown when the copying operation fails.</exception>
        </member>
        <member name="M:PstToolkit.PstFile.CopyFrom(PstToolkit.PstFile,PstToolkit.MessageFilter,System.Action{System.Double})">
            <summary>
            Copies filtered messages from another PST file into this one.
            </summary>
            <param name="sourcePst">The source PST file to copy from.</param>
            <param name="filter">A filter to apply to the messages being copied, or null to copy all messages.</param>
            <param name="progressCallback">Optional callback to report progress (0.0 to 1.0)</param>
            <exception cref="T:PstToolkit.Exceptions.PstException">Thrown when the copying operation fails.</exception>
        </member>
        <member name="M:PstToolkit.PstFile.Flush">
            <summary>
            Flushes any pending changes to disk.
            </summary>
        </member>
        <member name="M:PstToolkit.PstFile.Dispose">
            <summary>
            Disposes the PST file, releasing resources.
            </summary>
        </member>
        <member name="M:PstToolkit.PstFile.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the PstFile and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:PstToolkit.PstFile.GenerateNodeId(System.UInt16,System.UInt16)">
            <summary>
            Generates a node ID using the specified type and ID components.
            </summary>
            <param name="nodeType">The node type.</param>
            <param name="id">The ID component.</param>
            <returns>A combined node ID.</returns>
        </member>
        <member name="M:PstToolkit.PstFile.ReadBlock(System.UInt64,System.UInt32)">
            <summary>
            Reads a block of data from the PST file at the specified offset and size.
            Optimized for handling large blocks efficiently.
            </summary>
            <param name="offset">The offset in the file to read from.</param>
            <param name="size">The size of the block to read.</param>
            <returns>The data as a byte array.</returns>
        </member>
        <member name="M:PstToolkit.PstFile.ReadBlockAsync(System.UInt64,System.UInt32,System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads a block of data from the PST file at the specified offset and size.
            Optimized for handling large blocks efficiently.
            </summary>
            <param name="offset">The offset in the file to read from.</param>
            <param name="size">The size of the block to read.</param>
            <param name="cancellationToken">Optional cancellation token for the async operation.</param>
            <returns>The data as a byte array.</returns>
        </member>
        <member name="M:PstToolkit.PstFile.WriteBlock(System.UInt64,System.Byte[])">
            <summary>
            Writes a block of data to the PST file at the specified offset.
            Optimized for handling large blocks efficiently.
            </summary>
            <param name="offset">The offset in the file to write to.</param>
            <param name="data">The data to write.</param>
        </member>
        <member name="T:PstToolkit.PstFolder">
            <summary>
            Represents a folder in a PST file.
            </summary>
        </member>
        <member name="P:PstToolkit.PstFolder.FolderId">
            <summary>
            Gets the unique identifier for this folder within the PST file.
            </summary>
        </member>
        <member name="P:PstToolkit.PstFolder.Name">
            <summary>
            Gets or sets the name of the folder.
            </summary>
        </member>
        <member name="P:PstToolkit.PstFolder.ParentFolder">
            <summary>
            Gets the parent folder, or null if this is a root folder.
            </summary>
        </member>
        <member name="P:PstToolkit.PstFolder.SubFolderCount">
            <summary>
            Gets the subfolder count.
            </summary>
        </member>
        <member name="P:PstToolkit.PstFolder.MessageCount">
            <summary>
            Gets the message count.
            </summary>
        </member>
        <member name="P:PstToolkit.PstFolder.UnreadCount">
            <summary>
            Gets the number of unread messages in this folder.
            </summary>
        </member>
        <member name="P:PstToolkit.PstFolder.SubFolders">
            <summary>
            Gets the list of subfolders.
            </summary>
        </member>
        <member name="P:PstToolkit.PstFolder.Messages">
            <summary>
            Gets the list of messages in this folder.
            </summary>
        </member>
        <member name="P:PstToolkit.PstFolder.Type">
            <summary>
            Gets the folder type (e.g., Inbox, Sent Items, etc.).
            </summary>
        </member>
        <member name="P:PstToolkit.PstFolder.HasSubFolders">
            <summary>
            Gets whether this folder has subfolders.
            </summary>
        </member>
        <member name="T:PstToolkit.PstFolder.FolderType">
            <summary>
            Enumeration of standard folder types.
            </summary>
        </member>
        <member name="F:PstToolkit.PstFolder.FolderType.Normal">
            <summary>Regular user-created folder</summary>
        </member>
        <member name="F:PstToolkit.PstFolder.FolderType.Root">
            <summary>Root folder</summary>
        </member>
        <member name="F:PstToolkit.PstFolder.FolderType.Inbox">
            <summary>Inbox folder</summary>
        </member>
        <member name="F:PstToolkit.PstFolder.FolderType.Outbox">
            <summary>Outbox folder</summary>
        </member>
        <member name="F:PstToolkit.PstFolder.FolderType.SentItems">
            <summary>Sent Items folder</summary>
        </member>
        <member name="F:PstToolkit.PstFolder.FolderType.DeletedItems">
            <summary>Deleted Items folder</summary>
        </member>
        <member name="F:PstToolkit.PstFolder.FolderType.Calendar">
            <summary>Calendar folder</summary>
        </member>
        <member name="F:PstToolkit.PstFolder.FolderType.Contacts">
            <summary>Contacts folder</summary>
        </member>
        <member name="F:PstToolkit.PstFolder.FolderType.Drafts">
            <summary>Drafts folder</summary>
        </member>
        <member name="F:PstToolkit.PstFolder.FolderType.Journal">
            <summary>Journal folder</summary>
        </member>
        <member name="F:PstToolkit.PstFolder.FolderType.Notes">
            <summary>Notes folder</summary>
        </member>
        <member name="F:PstToolkit.PstFolder.FolderType.Tasks">
            <summary>Tasks folder</summary>
        </member>
        <member name="M:PstToolkit.PstFolder.CreateSubFolder(System.String)">
            <summary>
            Creates a subfolder with the specified name.
            </summary>
            <param name="folderName">The name of the new subfolder.</param>
            <returns>The newly created subfolder.</returns>
            <exception cref="T:PstToolkit.Exceptions.PstAccessException">Thrown if the PST file is read-only.</exception>
        </member>
        <member name="M:PstToolkit.PstFolder.FindFolder(System.String,System.Boolean)">
            <summary>
            Finds a subfolder by name.
            </summary>
            <param name="folderName">The name of the folder to find.</param>
            <param name="recursive">Whether to search recursively through all subfolders.</param>
            <returns>The found folder, or null if not found.</returns>
        </member>
        <member name="M:PstToolkit.PstFolder.AddMessage(PstToolkit.PstMessage)">
            <summary>
            Adds a message to this folder.
            </summary>
            <param name="message">The message to add.</param>
            <exception cref="T:PstToolkit.Exceptions.PstAccessException">Thrown if the PST file is read-only.</exception>
        </member>
        <member name="M:PstToolkit.PstFolder.DeleteMessage(PstToolkit.PstMessage)">
            <summary>
            Deletes a message from this folder.
            </summary>
            <param name="message">The message to delete.</param>
            <exception cref="T:PstToolkit.Exceptions.PstAccessException">Thrown if the PST file is read-only.</exception>
        </member>
        <member name="M:PstToolkit.PstFolder.Delete">
            <summary>
            Deletes this folder and all its contents.
            </summary>
            <exception cref="T:PstToolkit.Exceptions.PstAccessException">Thrown if the PST file is read-only or if the folder is the root folder.</exception>
        </member>
        <member name="M:PstToolkit.PstFolder.MoveTo(PstToolkit.PstFolder)">
            <summary>
            Moves this folder to become a subfolder of the specified target folder.
            </summary>
            <param name="targetFolder">The folder that will become this folder's new parent.</param>
            <exception cref="T:PstToolkit.Exceptions.PstAccessException">Thrown if the PST file is read-only or if the folder is the root folder.</exception>
            <exception cref="T:System.ArgumentException">Thrown if the target folder is this folder or a subfolder of this folder.</exception>
        </member>
        <member name="M:PstToolkit.PstFolder.GetSystemFolder(PstToolkit.PstFolder.FolderType)">
            <summary>
            Gets special system folders (Inbox, Sent Items, etc.) if they exist.
            </summary>
            <param name="folderType">The type of system folder to find.</param>
            <returns>The system folder if found, or null if not found.</returns>
        </member>
        <member name="T:PstToolkit.PstMessage">
            <summary>
            Represents an email message stored in a PST file.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.MessageId">
            <summary>
            Gets the unique identifier for this message within the PST file.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.Subject">
            <summary>
            Gets the subject of the email message.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.SenderEmail">
            <summary>
            Gets the sender's email address.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.SenderName">
            <summary>
            Gets the sender's display name.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.Recipients">
            <summary>
            Gets the list of recipients' email addresses.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.SentDate">
            <summary>
            Gets the date and time when the message was sent.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.ReceivedDate">
            <summary>
            Gets the date and time when the message was received.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.IsRead">
            <summary>
            Gets whether the message has been read.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.HasAttachments">
            <summary>
            Gets whether the message has attachments.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.Size">
            <summary>
            Gets the message size in bytes.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.AttachmentNames">
            <summary>
            Gets the list of attachment filenames.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.Importance">
            <summary>
            Gets the importance level of the message.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.BodyText">
            <summary>
            Gets or sets the plain text body of the message.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.BodyHtml">
            <summary>
            Gets or sets the HTML body of the message.
            </summary>
        </member>
        <member name="T:PstToolkit.PstMessage.MessageImportance">
            <summary>
            Enumeration of message importance levels.
            </summary>
        </member>
        <member name="F:PstToolkit.PstMessage.MessageImportance.Low">
            <summary>Low importance</summary>
        </member>
        <member name="F:PstToolkit.PstMessage.MessageImportance.Normal">
            <summary>Normal importance</summary>
        </member>
        <member name="F:PstToolkit.PstMessage.MessageImportance.High">
            <summary>High importance</summary>
        </member>
        <member name="M:PstToolkit.PstMessage.Create(PstToolkit.PstFile,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new email message that can be added to a PST file.
            </summary>
            <param name="pstFile">The PST file to create the message in.</param>
            <param name="subject">The subject of the email.</param>
            <param name="body">The body text of the email.</param>
            <param name="senderEmail">The sender's email address.</param>
            <param name="senderName">The sender's display name.</param>
            <returns>A new PstMessage instance.</returns>
        </member>
        <member name="M:PstToolkit.PstMessage.Create(PstToolkit.PstFile,MimeKit.MimeMessage)">
            <summary>
            Creates a new email message from a MimeKit MimeMessage.
            </summary>
            <param name="pstFile">The PST file to create the message in.</param>
            <param name="mimeMessage">The MimeKit message to convert.</param>
            <returns>A new PstMessage instance.</returns>
        </member>
        <member name="M:PstToolkit.PstMessage.ToMimeMessage">
            <summary>
            Gets the message as a MimeKit MimeMessage.
            </summary>
            <returns>A MimeMessage representation of this email.</returns>
        </member>
        <member name="M:PstToolkit.PstMessage.GetRawContent">
            <summary>
            Gets the raw content of the message.
            </summary>
            <returns>The raw message content as a byte array.</returns>
        </member>
        <member name="M:PstToolkit.PstMessage.GetPropertyContext">
            <summary>
            Gets the PropertyContext associated with this message for advanced property access.
            This is primarily for internal use when copying messages between PST files.
            </summary>
            <returns>The PropertyContext for this message.</returns>
        </member>
        <member name="M:PstToolkit.PstMessage.CreateFromExisting(PstToolkit.PstFile,PstToolkit.PstMessage)">
            <summary>
            Creates a new message by copying all properties from an existing message.
            This ensures a complete property copy rather than just the standard properties.
            </summary>
            <param name="pstFile">The PST file to create the message in.</param>
            <param name="sourceMessage">The source message to copy properties from.</param>
            <returns>The newly created message with all properties copied.</returns>
            <exception cref="T:PstToolkit.Exceptions.PstAccessException">Thrown if the PST file is read-only.</exception>
            <exception cref="T:PstToolkit.Exceptions.PstException">Thrown if the message creation fails.</exception>
        </member>
        <member name="T:PstToolkit.PstMessage.Attachment">
            <summary>
            Represents an attachment to an email message.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.Attachment.Filename">
            <summary>
            Gets the short filename of the attachment.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.Attachment.LongFilename">
            <summary>
            Gets the long filename of the attachment.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.Attachment.ContentType">
            <summary>
            Gets the content type/MIME type of the attachment.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.Attachment.Size">
            <summary>
            Gets the size of the attachment in bytes.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.Attachment.IsEmbedded">
            <summary>
            Gets whether the attachment is embedded (displayed inline in the message).
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.Attachment.IsEmailMessage">
            <summary>
            Gets whether this attachment is an email message.
            </summary>
        </member>
        <member name="M:PstToolkit.PstMessage.Attachment.GetContent">
            <summary>
            Gets the attachment data as a byte array.
            </summary>
            <returns>The attachment content as a byte array.</returns>
        </member>
        <member name="M:PstToolkit.PstMessage.Attachment.GetAsEmailMessage">
            <summary>
            If this attachment is an email message, gets it as a PstMessage.
            Returns null if the attachment is not an email message.
            </summary>
            <returns>A PstMessage if the attachment is an email, otherwise null.</returns>
        </member>
        <member name="M:PstToolkit.PstMessage.GetAttachments">
            <summary>
            Gets the attachments of the message.
            </summary>
            <returns>A list of attachments.</returns>
        </member>
        <member name="M:PstToolkit.PstMessage.GetAttachmentNodeIds">
            <summary>
            Gets the attachment node IDs for this message.
            </summary>
            <returns>A list of attachment node IDs.</returns>
        </member>
        <member name="M:PstToolkit.PstMessage.GetNestedEmailAttachments">
            <summary>
            Gets all nested email messages from the attachments.
            </summary>
            <returns>A list of email messages that were attachments to this message.</returns>
        </member>
        <member name="M:PstToolkit.PstMessage.ExtractAllEmailAttachments(System.String,System.Int32,System.String)">
            <summary>
            Extracts all email attachments, including nested ones, to EML files in the specified directory.
            </summary>
            <param name="outputDirectory">The directory to save the extracted email files.</param>
            <param name="recursionLevel">The current recursion level, used internally to prevent infinite recursion.</param>
            <param name="parentPath">The parent path prefix, used internally for nested emails.</param>
            <returns>The number of emails extracted.</returns>
        </member>
        <member name="M:PstToolkit.PstMessage.AddEmailAttachment(PstToolkit.PstMessage)">
            <summary>
            Adds another email message as an attachment to this message.
            </summary>
            <param name="emailMessage">The email message to attach.</param>
            <returns>The newly added attachment.</returns>
        </member>
        <member name="M:PstToolkit.PstMessage.AddAttachment(System.String,System.Byte[],System.String)">
            <summary>
            Adds an attachment to this message.
            </summary>
            <param name="filename">The filename of the attachment.</param>
            <param name="content">The content of the attachment as a byte array.</param>
            <param name="contentType">The content type/MIME type of the attachment.</param>
            <returns>The newly added attachment.</returns>
        </member>
        <member name="M:PstToolkit.PstMessage.RemoveAttachment(PstToolkit.PstMessage.Attachment)">
            <summary>
            Removes an attachment from this message.
            </summary>
            <param name="attachment">The attachment to remove.</param>
        </member>
        <member name="T:PstToolkit.PstMessage.Recipient">
            <summary>
            Represents a recipient of an email message.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.Recipient.DisplayName">
            <summary>
            Gets the display name of the recipient.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.Recipient.EmailAddress">
            <summary>
            Gets the email address of the recipient.
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.Recipient.Type">
            <summary>
            Gets the recipient type (To, Cc, Bcc).
            </summary>
        </member>
        <member name="P:PstToolkit.PstMessage.Recipient.FullAddress">
            <summary>
            Gets a string representing the recipient in "Display Name email" format.
            </summary>
        </member>
        <member name="T:PstToolkit.PstMessage.RecipientType">
            <summary>
            Enumeration of recipient types.
            </summary>
        </member>
        <member name="F:PstToolkit.PstMessage.RecipientType.To">
            <summary>Primary recipient (To)</summary>
        </member>
        <member name="F:PstToolkit.PstMessage.RecipientType.Cc">
            <summary>Carbon copy recipient (CC)</summary>
        </member>
        <member name="F:PstToolkit.PstMessage.RecipientType.Bcc">
            <summary>Blind carbon copy recipient (BCC)</summary>
        </member>
        <member name="M:PstToolkit.PstMessage.GetRecipients">
            <summary>
            Gets the list of message recipients (To, Cc, Bcc).
            </summary>
        </member>
        <member name="M:PstToolkit.PstMessage.AddRecipient(System.String,System.String,PstToolkit.PstMessage.RecipientType)">
            <summary>
            Adds a recipient to this message.
            </summary>
            <param name="displayName">The display name of the recipient.</param>
            <param name="emailAddress">The email address of the recipient.</param>
            <param name="type">The recipient type (To, Cc, Bcc).</param>
            <returns>The newly added recipient.</returns>
        </member>
        <member name="M:PstToolkit.PstMessage.RemoveRecipient(System.String)">
            <summary>
            Removes a recipient from this message.
            </summary>
            <param name="emailAddress">The email address of the recipient to remove.</param>
            <returns>True if the recipient was removed, false if not found.</returns>
        </member>
        <member name="T:PstToolkit.Utils.BTreeOnHeap">
            <summary>
            Represents a B-tree structure on a heap in a PST file.
            </summary>
        </member>
        <member name="M:PstToolkit.Utils.BTreeOnHeap.#ctor(PstToolkit.PstFile,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.Utils.BTreeOnHeap"/> class.
            </summary>
            <param name="pstFile">The PST file.</param>
            <param name="rootNodeId">The root node ID of the B-tree.</param>
        </member>
        <member name="M:PstToolkit.Utils.BTreeOnHeap.FindNodeByNid(System.UInt32)">
            <summary>
            Finds a node in the B-tree by its node ID.
            </summary>
            <param name="nodeId">The node ID to find.</param>
            <returns>The node entry if found, or null if not found.</returns>
        </member>
        <member name="M:PstToolkit.Utils.BTreeOnHeap.GetAllNodes">
            <summary>
            Gets all nodes in the B-tree.
            </summary>
            <returns>A list of all node entries.</returns>
        </member>
        <member name="M:PstToolkit.Utils.BTreeOnHeap.CreateNew(PstToolkit.PstFile,System.UInt32)">
            <summary>
            Creates a new B-tree with a root node.
            </summary>
            <param name="pstFile">The PST file.</param>
            <param name="rootNodeId">The root node ID of the B-tree.</param>
            <returns>A new BTreeOnHeap instance.</returns>
        </member>
        <member name="M:PstToolkit.Utils.BTreeOnHeap.AddNode(System.UInt32,System.UInt32,System.UInt32,System.Byte[])">
            <summary>
            Adds a new node to the B-tree.
            </summary>
            <param name="nodeId">The node ID to add.</param>
            <param name="dataId">The data ID for the node.</param>
            <param name="parentId">The parent node ID.</param>
            <param name="data">The data to store in the node.</param>
            <returns>The new node entry.</returns>
        </member>
        <member name="M:PstToolkit.Utils.BTreeOnHeap.AddNode(PstToolkit.Utils.NdbNodeEntry,System.Byte[])">
            <summary>
            Adds an existing node entry to the B-tree.
            </summary>
            <param name="node">The node entry to add.</param>
            <param name="data">The data to store in the node.</param>
            <returns>The node entry that was added.</returns>
        </member>
        <member name="M:PstToolkit.Utils.BTreeOnHeap.AddNode(System.UInt32,System.UInt32,System.UInt32,System.Byte[],System.String)">
            <summary>
            Adds a new node to the B-tree with a display name.
            </summary>
            <param name="nodeId">The node ID to add.</param>
            <param name="dataId">The data ID for the node.</param>
            <param name="parentId">The parent node ID.</param>
            <param name="data">The data to store in the node.</param>
            <param name="displayName">The display name for the node (for folders).</param>
            <returns>The new node entry.</returns>
        </member>
        <member name="M:PstToolkit.Utils.BTreeOnHeap.RemoveNode(System.UInt32)">
            <summary>
            Removes a node from the B-tree.
            </summary>
            <param name="nodeId">The node ID to remove.</param>
            <returns>True if the node was removed, false if it wasn't found.</returns>
        </member>
        <member name="T:PstToolkit.Utils.NdbNodeEntry">
            <summary>
            Represents a node entry in the Node Database (NDB) layer of a PST file.
            </summary>
        </member>
        <member name="P:PstToolkit.Utils.NdbNodeEntry.NodeId">
            <summary>
            Gets the node ID.
            </summary>
        </member>
        <member name="P:PstToolkit.Utils.NdbNodeEntry.DataId">
            <summary>
            Gets the data ID.
            </summary>
        </member>
        <member name="P:PstToolkit.Utils.NdbNodeEntry.ParentId">
            <summary>
            Gets the parent node ID.
            </summary>
        </member>
        <member name="P:PstToolkit.Utils.NdbNodeEntry.NodeType">
            <summary>
            Gets the node type.
            </summary>
        </member>
        <member name="P:PstToolkit.Utils.NdbNodeEntry.DataOffset">
            <summary>
            Gets or sets the data offset in the file.
            </summary>
        </member>
        <member name="P:PstToolkit.Utils.NdbNodeEntry.DataSize">
            <summary>
            Gets or sets the data size in bytes.
            </summary>
        </member>
        <member name="P:PstToolkit.Utils.NdbNodeEntry.DisplayName">
            <summary>
            Gets or sets the display name (for folders and messages).
            </summary>
        </member>
        <member name="P:PstToolkit.Utils.NdbNodeEntry.SenderName">
            <summary>
            Gets or sets the sender name (for messages).
            </summary>
        </member>
        <member name="P:PstToolkit.Utils.NdbNodeEntry.SenderEmail">
            <summary>
            Gets or sets the sender email (for messages).
            </summary>
        </member>
        <member name="P:PstToolkit.Utils.NdbNodeEntry.Subject">
            <summary>
            Gets or sets the message subject (for messages).
            </summary>
        </member>
        <member name="P:PstToolkit.Utils.NdbNodeEntry.SentDate">
            <summary>
            Gets or sets the sent date (for messages).
            </summary>
        </member>
        <member name="P:PstToolkit.Utils.NdbNodeEntry.Metadata">
            <summary>
            Gets or sets additional metadata for the node.
            </summary>
        </member>
        <member name="M:PstToolkit.Utils.NdbNodeEntry.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt64,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.Utils.NdbNodeEntry"/> class.
            </summary>
            <param name="nodeId">The node ID.</param>
            <param name="dataId">The data ID.</param>
            <param name="parentId">The parent node ID.</param>
            <param name="dataOffset">The data offset in the file.</param>
            <param name="dataSize">The data size in bytes.</param>
        </member>
        <member name="M:PstToolkit.Utils.NdbNodeEntry.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt64,System.UInt32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.Utils.NdbNodeEntry"/> class with additional metadata.
            </summary>
            <param name="nodeId">The node ID.</param>
            <param name="dataId">The data ID.</param>
            <param name="parentId">The parent node ID.</param>
            <param name="dataOffset">The data offset in the file.</param>
            <param name="dataSize">The data size in bytes.</param>
            <param name="displayName">The display name for the node.</param>
        </member>
        <member name="M:PstToolkit.Utils.NdbNodeEntry.ReadData(PstToolkit.PstFile)">
            <summary>
            Reads node data from the PST file.
            </summary>
            <param name="pstFile">The PST file.</param>
            <returns>The node data as a byte array.</returns>
        </member>
        <member name="M:PstToolkit.Utils.NdbNodeEntry.SetMetadata(System.String,System.String)">
            <summary>
            Sets a metadata value for the node.
            </summary>
            <param name="key">The metadata key.</param>
            <param name="value">The metadata value.</param>
        </member>
        <member name="M:PstToolkit.Utils.NdbNodeEntry.GetMetadata(System.String)">
            <summary>
            Gets a metadata value from the node.
            </summary>
            <param name="key">The metadata key.</param>
            <returns>The metadata value, or null if the key doesn't exist.</returns>
        </member>
        <member name="M:PstToolkit.Utils.NdbNodeEntry.Create(System.UInt32,System.UInt32,System.UInt32,System.UInt64,System.UInt32)">
            <summary>
            Creates a new node entry from the given parameters.
            </summary>
            <param name="nodeId">The node ID.</param>
            <param name="dataId">The data ID.</param>
            <param name="parentId">The parent node ID.</param>
            <param name="dataOffset">The data offset in the file.</param>
            <param name="dataSize">The data size in bytes.</param>
            <returns>A new NdbNodeEntry instance.</returns>
        </member>
        <member name="T:PstToolkit.Utils.PropertyContext">
            <summary>
            Provides access to properties stored in a PST node.
            </summary>
        </member>
        <member name="M:PstToolkit.Utils.PropertyContext.#ctor(PstToolkit.PstFile,PstToolkit.Utils.NdbNodeEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.Utils.PropertyContext"/> class.
            </summary>
            <param name="pstFile">The PST file.</param>
            <param name="nodeEntry">The node entry.</param>
        </member>
        <member name="M:PstToolkit.Utils.PropertyContext.#ctor(PstToolkit.PstFile,PstToolkit.Utils.NdbNodeEntry,System.Collections.Generic.Dictionary{System.UInt32,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.Utils.PropertyContext"/> class with predefined properties.
            </summary>
            <param name="pstFile">The PST file.</param>
            <param name="nodeEntry">The node entry.</param>
            <param name="propertiesToCopy">The properties to copy from another property context.</param>
        </member>
        <member name="M:PstToolkit.Utils.PropertyContext.GetString(System.UInt16)">
            <summary>
            Gets a string property.
            </summary>
            <param name="propertyId">The property ID.</param>
            <returns>The string value if found, or null if not found.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PropertyContext.GetInt32(System.UInt16)">
            <summary>
            Gets an integer property.
            </summary>
            <param name="propertyId">The property ID.</param>
            <returns>The integer value if found, or null if not found.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PropertyContext.GetInt64(System.UInt16)">
            <summary>
            Gets a long integer property.
            </summary>
            <param name="propertyId">The property ID.</param>
            <returns>The long integer value if found, or null if not found.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PropertyContext.GetDateTime(System.UInt16)">
            <summary>
            Gets a DateTime property.
            </summary>
            <param name="propertyId">The property ID.</param>
            <returns>The DateTime value if found, or null if not found.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PropertyContext.GetBinary(System.UInt16)">
            <summary>
            Gets a binary property.
            </summary>
            <param name="propertyId">The property ID.</param>
            <returns>The binary data as a byte array if found, or null if not found.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PropertyContext.GetBoolean(System.UInt16)">
            <summary>
            Gets a boolean property.
            </summary>
            <param name="propertyId">The property ID.</param>
            <returns>The boolean value if found, or null if not found.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PropertyContext.GetBytes(System.UInt16)">
            <summary>
            Gets a binary property.
            </summary>
            <param name="propertyId">The property ID.</param>
            <returns>The binary value as a byte array if found, or null if not found.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PropertyContext.SetProperty(System.UInt16,PstToolkit.Utils.PstStructure.PropertyType,System.Object)">
            <summary>
            Sets a property value.
            </summary>
            <param name="propertyId">The property ID.</param>
            <param name="propertyType">The property type.</param>
            <param name="value">The property value.</param>
        </member>
        <member name="M:PstToolkit.Utils.PropertyContext.DeleteProperty(System.UInt16,PstToolkit.Utils.PstStructure.PropertyType)">
            <summary>
            Deletes a property.
            </summary>
            <param name="propertyId">The property ID.</param>
            <param name="propertyType">The property type.</param>
            <returns>True if the property was deleted, false if it wasn't found.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PropertyContext.GetAllProperties">
            <summary>
            Gets all the properties in this context as a dictionary.
            </summary>
            <returns>A dictionary of all properties with their property IDs and values.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PropertyContext.Save">
            <summary>
            Saves any modified properties back to the PST file.
            </summary>
        </member>
        <member name="T:PstToolkit.Utils.PstBinaryReader">
            <summary>
            Binary reader with PST-specific functionality, optimized for large files.
            </summary>
        </member>
        <member name="M:PstToolkit.Utils.PstBinaryReader.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.Utils.PstBinaryReader"/> class.
            </summary>
            <param name="stream">The stream to read from.</param>
            <param name="leaveOpen">Whether to leave the stream open when the reader is disposed.</param>
        </member>
        <member name="M:PstToolkit.Utils.PstBinaryReader.ReadString(System.Int32,System.Text.Encoding)">
            <summary>
            Reads a variable-length string from the current stream with optimized memory usage.
            </summary>
            <param name="length">The length of the string in bytes.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>The string that was read.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PstBinaryReader.ReadNullTerminatedString(System.Text.Encoding)">
            <summary>
            Reads a null-terminated string from the current stream with optimized memory usage.
            </summary>
            <param name="encoding">The character encoding to use.</param>
            <returns>The string that was read.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PstBinaryReader.ReadGuid">
            <summary>
            Reads a GUID from the current stream.
            </summary>
            <returns>The GUID that was read.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PstBinaryReader.ReadFileTime">
            <summary>
            Reads a 64-bit file time from the current stream.
            </summary>
            <returns>A DateTime representing the file time that was read.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PstBinaryReader.ReadLengthPrefixedString(System.Text.Encoding)">
            <summary>
            Reads a length-prefixed string from the current stream.
            </summary>
            <param name="encoding">The character encoding to use.</param>
            <returns>The string that was read.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PstBinaryReader.ReadBytesAt(System.Int64,System.Int32)">
            <summary>
            Reads a specified number of bytes from the stream, starting at a specified position,
            with optimizations for large data blocks.
            </summary>
            <param name="position">The position in the stream to begin reading from.</param>
            <param name="count">The number of bytes to read.</param>
            <returns>A byte array containing the read bytes.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PstBinaryReader.ReadLargeBlock(System.Int32)">
            <summary>
            Reads a large block of data from the stream efficiently.
            </summary>
            <param name="count">The number of bytes to read.</param>
            <returns>A byte array containing the read bytes.</returns>
        </member>
        <member name="T:PstToolkit.Utils.PstBinaryWriter">
            <summary>
            Binary writer with PST-specific functionality.
            </summary>
        </member>
        <member name="M:PstToolkit.Utils.PstBinaryWriter.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:PstToolkit.Utils.PstBinaryWriter"/> class.
            </summary>
            <param name="stream">The stream to write to.</param>
            <param name="leaveOpen">Whether to leave the stream open when the writer is disposed.</param>
        </member>
        <member name="M:PstToolkit.Utils.PstBinaryWriter.WriteString(System.String,System.Text.Encoding)">
            <summary>
            Writes a string to the current stream with the specified encoding.
            </summary>
            <param name="value">The string to write.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:PstToolkit.Utils.PstBinaryWriter.WriteNullTerminatedString(System.String,System.Text.Encoding)">
            <summary>
            Writes a null-terminated string to the current stream with the specified encoding.
            </summary>
            <param name="value">The string to write.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:PstToolkit.Utils.PstBinaryWriter.WriteGuid(System.Guid)">
            <summary>
            Writes a GUID to the current stream.
            </summary>
            <param name="value">The GUID to write.</param>
        </member>
        <member name="M:PstToolkit.Utils.PstBinaryWriter.WriteFileTime(System.DateTime)">
            <summary>
            Writes a DateTime as a 64-bit file time to the current stream.
            </summary>
            <param name="value">The DateTime to write.</param>
        </member>
        <member name="M:PstToolkit.Utils.PstBinaryWriter.WriteLengthPrefixedString(System.String,System.Text.Encoding)">
            <summary>
            Writes a length-prefixed string to the current stream.
            </summary>
            <param name="value">The string to write.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:PstToolkit.Utils.PstBinaryWriter.WriteBytesAt(System.Int64,System.Byte[])">
            <summary>
            Writes bytes to the stream at the specified position without changing the stream position.
            </summary>
            <param name="position">The position in the stream to write to.</param>
            <param name="buffer">The bytes to write.</param>
        </member>
        <member name="T:PstToolkit.Utils.PstStructure">
            <summary>
            Constants and utilities related to the PST file structure.
            </summary>
        </member>
        <member name="T:PstToolkit.Utils.PstStructure.PropertyIds">
            <summary>
            Property ID constants for common PST properties.
            </summary>
        </member>
        <member name="T:PstToolkit.Utils.PstStructure.PropertyType">
            <summary>
            Property types used in PST property contexts.
            </summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_UNSPECIFIED">
            <summary>No type</summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_NULL">
            <summary>Null value</summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_SHORT">
            <summary>2-byte integer</summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_LONG">
            <summary>4-byte integer</summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_FLOAT">
            <summary>4-byte floating point</summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_DOUBLE">
            <summary>8-byte floating point</summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_CURRENCY">
            <summary>Currency value</summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_APPTIME">
            <summary>Application time</summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_ERROR">
            <summary>4-byte error value</summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_BOOLEAN">
            <summary>1-byte boolean</summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_OBJECT">
            <summary>Object/embedded object</summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_LONGLONG">
            <summary>8-byte integer</summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_STRING8">
            <summary>String</summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_UNICODE">
            <summary>Unicode string</summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_SYSTIME">
            <summary>File time</summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_CLSID">
            <summary>GUID</summary>
        </member>
        <member name="F:PstToolkit.Utils.PstStructure.PropertyType.PT_BINARY">
            <summary>Binary data</summary>
        </member>
        <member name="M:PstToolkit.Utils.PstStructure.MakePropertyId(System.UInt16,PstToolkit.Utils.PstStructure.PropertyType)">
            <summary>
            Creates a complete property ID by combining a property ID and type.
            </summary>
            <param name="id">The property ID.</param>
            <param name="type">The property type.</param>
            <returns>The complete property ID.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PstStructure.GetPropertyId(System.UInt32)">
            <summary>
            Extracts the property ID from a complete property ID.
            </summary>
            <param name="propertyId">The complete property ID.</param>
            <returns>The property ID.</returns>
        </member>
        <member name="M:PstToolkit.Utils.PstStructure.GetPropertyType(System.UInt32)">
            <summary>
            Extracts the property type from a complete property ID.
            </summary>
            <param name="propertyId">The complete property ID.</param>
            <returns>The property type.</returns>
        </member>
    </members>
</doc>
